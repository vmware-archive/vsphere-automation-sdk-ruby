# Copyright (c) 2018-2019 VMware, Inc.  All Rights Reserved.
# SPDX-License-Identifier: MIT

# DO NOT MODIFY. THIS CODE IS GENERATED. CHANGES WILL BE OVERWRITTEN.

# vcenter - VMware vCenter Server provides a centralized platform for managing your VMware vSphere environments


require 'spec_helper'
require 'json'

# Unit tests for VSphereAutomation::VCenter::DatacenterApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'DatacenterApi' do
  before do
    # run before each test
    @instance = VSphereAutomation::VCenter::DatacenterApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of DatacenterApi' do
    it 'should create an instance of DatacenterApi' do
      expect(@instance).to be_instance_of(VSphereAutomation::VCenter::DatacenterApi)
    end
  end

  # unit tests for create
  # Create a new datacenter in the vCenter inventory
  # @param vcenter_datacenter_create 
  # @param [Hash] opts the optional parameters
  # @return [VcenterDatacenterCreateResult]
  describe 'create test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete
  # Delete an empty datacenter from the vCenter Server
  # @param datacenter Identifier of the datacenter to be deleted. The parameter must be an identifier for the resource type: Datacenter.
  # @param [Hash] opts the optional parameters
  # @option opts [BOOLEAN] :force If true, delete the datacenter even if it is not empty. If unset a ResourceInUse error will be reported if the datacenter is not empty. This is the equivalent of passing the value false.
  # @return [nil]
  describe 'delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get
  # Retrieves information about the datacenter corresponding to datacenter.
  # @param datacenter Identifier of the datacenter. The parameter must be an identifier for the resource type: Datacenter.
  # @param [Hash] opts the optional parameters
  # @return [VcenterDatacenterResult]
  describe 'get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list
  # Returns information about at most 1000 visible (subject to permission checks) datacenters in vCenter matching the Datacenter.FilterSpec.
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :filter_datacenters Identifiers of datacenters that can match the filter. If unset or empty, datacenters with any identifier match the filter. When clients pass a value of this structure as a parameter, the field must contain identifiers for the resource type: Datacenter. When operations return a value of this structure as a result, the field will contain identifiers for the resource type: Datacenter.
  # @option opts [Array<String>] :filter_names Names that datacenters must have to match the filter (see Datacenter.Info.name). If unset or empty, datacenters with any name match the filter.
  # @option opts [Array<String>] :filter_folders Folders that must contain the datacenters for the datacenter to match the filter. If unset or empty, datacenters in any folder match the filter. When clients pass a value of this structure as a parameter, the field must contain identifiers for the resource type: Folder. When operations return a value of this structure as a result, the field will contain identifiers for the resource type: Folder.
  # @return [VcenterDatacenterListResult]
  describe 'list test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
