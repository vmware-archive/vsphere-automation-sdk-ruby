# Copyright (c) 2018-2019 VMware, Inc.  All Rights Reserved.
# SPDX-License-Identifier: MIT

# DO NOT MODIFY. THIS CODE IS GENERATED. CHANGES WILL BE OVERWRITTEN.

# content - VMware vSphereÂ® Content Library empowers vSphere Admins to effectively manage VM templates, vApps, ISO images and scripts with ease.


require 'spec_helper'
require 'json'

# Unit tests for VSphereAutomation::Content::LibraryApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'LibraryApi' do
  before do
    # run before each test
    @instance = VSphereAutomation::Content::LibraryApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of LibraryApi' do
    it 'should create an instance of LibraryApi' do
      expect(@instance).to be_instance_of(VSphereAutomation::Content::LibraryApi)
    end
  end

  # unit tests for find
  # Returns a list of all the visible (as determined by authorization policy) libraries matching the requested {@link Library.FindSpec}.
  # @param content_library_find 
  # @param [Hash] opts the optional parameters
  # @return [ContentLibraryFindResult]
  describe 'find test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get
  # Returns a given {@link LibraryModel}.
  # @param library_id Identifier of the library to return.
  # @param [Hash] opts the optional parameters
  # @return [ContentLibraryResult]
  describe 'get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list
  # Returns the identifiers of all libraries of any type in the Content Library.
  # @param [Hash] opts the optional parameters
  # @return [ContentLibraryListResult]
  describe 'list test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update
  # Updates the properties of a library. &lt;p&gt; This is an incremental update to the library. Any {@term field} in the {@link LibraryModel} {@term structure} that is {@term unset} will not be modified. &lt;p&gt; This {@term operation} will only update the common properties for all library types. This will not, for example, update the {@link LibraryModel#publishInfo} of a local library, nor the {@link LibraryModel#subscriptionInfo} of a subscribed library. Specific properties are updated in {@link LocalLibrary#update} and {@link SubscribedLibrary#update}.
  # @param library_id Identifier of the library to update.
  # @param content_library_update 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'update test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
