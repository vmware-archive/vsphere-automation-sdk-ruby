# Copyright (c) 2018-2019 VMware, Inc.  All Rights Reserved.
# SPDX-License-Identifier: MIT

# DO NOT MODIFY. THIS CODE IS GENERATED. CHANGES WILL BE OVERWRITTEN.

# content - VMware vSphereÂ® Content Library empowers vSphere Admins to effectively manage VM templates, vApps, ISO images and scripts with ease.


require 'spec_helper'
require 'json'

# Unit tests for VSphereAutomation::Content::LibraryItemDownloadSessionApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'LibraryItemDownloadSessionApi' do
  before do
    # run before each test
    @instance = VSphereAutomation::Content::LibraryItemDownloadSessionApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of LibraryItemDownloadSessionApi' do
    it 'should create an instance of LibraryItemDownloadSessionApi' do
      expect(@instance).to be_instance_of(VSphereAutomation::Content::LibraryItemDownloadSessionApi)
    end
  end

  # unit tests for cancel
  # Cancels the download session. This {@term operation} will abort any ongoing transfers and invalidate transfer urls that the client may be downloading from.
  # @param download_session_id Identifer of the download session that should be canceled.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'cancel test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create
  # Creates a new download session.
  # @param content_library_item_download_session_create 
  # @param [Hash] opts the optional parameters
  # @return [ContentLibraryItemDownloadSessionCreateResult]
  describe 'create test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete
  # Deletes a download session. This removes the session and all information associated with it. &lt;p&gt; Removing a download session leaves any current transfers for that session in an indeterminate state (there is no guarantee that the transfers will be able to complete). However there will no longer be a means of inspecting the status of those downloads except by seeing the effect on the library item. &lt;p&gt; Download sessions for which there is no download activity or which are complete will automatically be expired and then deleted after a period of time.
  # @param download_session_id Identifier of the download session to be deleted.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for fail
  # Terminates the download session with a client specified error message. &lt;p&gt; This is useful in transmitting client side failures (for example, not being able to download a file) to the server side.
  # @param download_session_id Identifier of the download session to fail.
  # @param content_library_item_download_session_fail 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'fail test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get
  # Gets the download session with the specified identifier, including the most up-to-date status information for the session.
  # @param download_session_id Identifier of the download session to retrieve.
  # @param [Hash] opts the optional parameters
  # @return [ContentLibraryItemDownloadSessionResult]
  describe 'get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for keep_alive
  # Keeps a download session alive. This operation is allowed only if the session is in the {@link DownloadSessionModel.State#ACTIVE} state. &lt;p&gt; If there is no activity for a download session for a certain period of time, the download session will expire. The download session expiration timeout is configurable in the Content Library Service system configuration. The default is five minutes. Invoking this {@term operation} enables a client to specifically extend the lifetime of an active download session.
  # @param download_session_id Identifier of the download session whose lifetime should be extended.
  # @param [Hash] opts the optional parameters
  # @option opts [ContentLibraryItemDownloadSessionKeepAlive] :content_library_item_download_session_keep_alive 
  # @return [nil]
  describe 'keep_alive test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list
  # Lists the identifiers of the download sessions created by the calling user. Optionally may filter by library item.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :library_item_id Library item identifier on which to filter results.
  # @return [ContentLibraryItemDownloadSessionListResult]
  describe 'list test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
